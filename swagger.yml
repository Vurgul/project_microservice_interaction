Metamug Metamug
Services
Blog
Postman Collection to Swagger
{
	"info": {
		"_postman_id": "d72afd53-ba99-4608-b34a-3e26715adc99",
		"name": "Microservice EndPoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "users/create",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"test\",\r\n    \"age\": 1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8880/api/users/add_user",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8880",
					"path": [
						"api",
						"users",
						"add_user"
					]
				}
			},
			"response": []
		},
		{
			"name": "users/get_all",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:1111/api/users/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "1111",
					"path": [
						"api",
						"users",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "users/get_info",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8880/api/users/user_info?user_id=1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8880",
					"path": [
						"api",
						"users",
						"user_info"
					],
					"query": [
						{
							"key": "user_id",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "users/delete",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"user_id\": 1 \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8880/api/users/delete_user",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8880",
					"path": [
						"api",
						"users",
						"delete_user"
					]
				}
			},
			"response": []
		},
		{
			"name": "users/update",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"user_id\": 2,\r\n    \"name\": \"gerwge\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8880/api/users/edit_user",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8880",
					"path": [
						"api",
						"users",
						"edit_user"
					]
				}
			},
			"response": []
		},
		{
			"name": "books/create",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"author\": \"test\",\r\n    \"title\": \"test\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8880/api/books/add_book",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8880",
					"path": [
						"api",
						"books",
						"add_book"
					]
				}
			},
			"response": []
		},
		{
			"name": "books/get/all",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8880/api/books/books",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8880",
					"path": [
						"api",
						"books",
						"books"
					]
				}
			},
			"response": []
		},
		{
			"name": "books/get_info",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8880/api/books/book_info?book_id=4",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8880",
					"path": [
						"api",
						"books",
						"book_info"
					],
					"query": [
						{
							"key": "book_id",
							"value": "4"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "books/delete",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"book_id\": 1 \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8880/api/books/delete_book",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8880",
					"path": [
						"api",
						"books",
						"delete_book"
					]
				}
			},
			"response": []
		},
		{
			"name": "books/update",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"book_id\": 2,\r\n    \"author\": \"gerwge\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8880/api/books/edit_book",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8880",
					"path": [
						"api",
						"books",
						"edit_book"
					]
				}
			},
			"response": []
		},
		{
			"name": "books/take",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"book_id\": 2,\r\n    \"taker_id\": 2\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8880/api/books/take",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8880",
					"path": [
						"api",
						"books",
						"take"
					]
				}
			},
			"response": []
		},
		{
			"name": "books/return",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"book_id\": 2,\r\n    \"returner_id\": 2\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8880/api/books/return",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8880",
					"path": [
						"api",
						"books",
						"return"
					]
				}
			},
			"response": []
		},
		{
			"name": "issues/get_all",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8880/api/issues/issues",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8880",
					"path": [
						"api",
						"issues",
						"issues"
					]
				}
			},
			"response": []
		}
	]
}
Swagger(OPEN API) 3.0
openapi: 3.0.0
info:
  title: Microservice EndPoints
  version: 1.0.0
servers:
  - url: http://localhost:8880
  - url: http://localhost:1111
paths:
  /api/users/add_user:
    post:
      tags:
        - General
      summary: users/create
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: test
                age: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/users/users:
    get:
      tags:
        - General
      summary: users/get_all
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/users/user_info:
    get:
      tags:
        - General
      summary: users/get_info
      parameters:
        - name: user_id
          in: query
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/users/delete_user:
    post:
      tags:
        - General
      summary: users/delete
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                user_id: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/users/edit_user:
    post:
      tags:
        - General
      summary: users/update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                user_id: 2
                name: gerwge
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/books/add_book:
    post:
      tags:
        - General
      summary: books/create
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                author: test
                title: test
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/books/books:
    get:
      tags:
        - General
      summary: books/get/all
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/books/book_info:
    get:
      tags:
        - General
      summary: books/get_info
      parameters:
        - name: book_id
          in: query
          schema:
            type: integer
          example: '4'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/books/delete_book:
    post:
      tags:
        - General
      summary: books/delete
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                book_id: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/books/edit_book:
    post:
      tags:
        - General
      summary: books/update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                book_id: 2
                author: gerwge
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/books/take:
    post:
      tags:
        - General
      summary: books/take
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                book_id: 2
                taker_id: 2
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/books/return:
    post:
      tags:
        - General
      summary: books/return
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                book_id: 2
                returner_id: 2
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/issues/issues:
    get:
      tags:
        - General
      summary: issues/get_all
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
