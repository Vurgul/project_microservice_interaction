openapi: 3.0.0
info:
  title: Microservice EndPoints
  version: 1.0.0
servers:
  - url: http://localhost:8880
  - url: http://localhost:1111
paths:
  /api/users/add_user:
    post:
      tags:
        - General
      summary: users/create
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: test
                age: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/users/users:
    get:
      tags:
        - General
      summary: users/get_all
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/users/user_info:
    get:
      tags:
        - General
      summary: users/get_info
      parameters:
        - name: user_id
          in: query
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/users/delete_user:
    post:
      tags:
        - General
      summary: users/delete
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                user_id: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/users/edit_user:
    post:
      tags:
        - General
      summary: users/update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                user_id: 2
                name: gerwge
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/books/add_book:
    post:
      tags:
        - General
      summary: books/create
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                author: test
                title: test
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/books/books:
    get:
      tags:
        - General
      summary: books/get/all
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/books/book_info:
    get:
      tags:
        - General
      summary: books/get_info
      parameters:
        - name: book_id
          in: query
          schema:
            type: integer
          example: '4'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/books/delete_book:
    post:
      tags:
        - General
      summary: books/delete
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                book_id: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/books/edit_book:
    post:
      tags:
        - General
      summary: books/update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                book_id: 2
                author: gerwge
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/books/take:
    post:
      tags:
        - General
      summary: books/take
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                book_id: 2
                taker_id: 2
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/books/return:
    post:
      tags:
        - General
      summary: books/return
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                book_id: 2
                returner_id: 2
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/issues/issues:
    get:
      tags:
        - General
      summary: issues/get_all
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}